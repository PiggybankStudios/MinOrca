{
	"folders":
	[
		{
			"path": ".",
			"folder_exclude_patterns": [
				"lib/include/*",
				"build/MinOrca",
				"Release/*",
			],
			"file_exclude_patterns": [
				"*.wasm",
				"*.zip",
			],
		},
		{
			"name": "GyLib",
			"path": "lib/include/gylib",
			"folder_exclude_patterns": [
				"test",
			],
			"file_exclude_patterns": [
				"*.sublime-project",
			],
		},
		{
			"name": "Orca Docs",
			"path": "lib/include/orca/doc/",
			"folder_exclude_patterns": [
				"mkdocs/docs",
			],
		},
		{
			"name": "Orca Headers",
			"path": "lib/include/orca/src/",
			"file_include_patterns": [
				"*.h",
			],
		},
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[
			"EXPORT",
		],
		"custom_functions":
		[
			"#define OC_Abort(message, ...)",
			"#define OC_ArenaPushArray(arena, type, count)",
			"#define OC_ArenaPushType(arena, type)",
			"#define OC_Assert(test, message, ...)",
			"#define OC_ListEntry(element, type, member)",
			"#define OC_ListFirstEntry(list, type, member)",
			"#define OC_ListFor(list, element, type, member)",
			"#define OC_ListForReverse(list, element, type, member)",
			"#define OC_ListForSafe(list, element, type, member)",
			"#define OC_ListLastEntry(list, type, member)",
			"#define OC_ListNext(element)",
			"#define OC_ListNextEntry(list, element, type, member)",
			"#define OC_ListPopBackEntry(list, type, member)",
			"#define OC_ListPopFrontEntry(list, type, member)",
			"#define OC_ListPrev(element)",
			"#define OC_ListPrevEntry(list, element, type, member)",
			"#define OC_Log_E(message, ...)",
			"#define OC_Log_I(message, ...)",
			"#define OC_Log_W(message, ...)",
			"#define OC_ScratchEnd(scope)",
			"#define OC_Str8ListPushf(arena, list, format, ...)",
			"#define OC_Str8Pushf(arena, format, ...)",
			"#define OC_UiFrame(size, style, mask)",
			"#define OC_UiMenu(name)",
			"#define OC_UiMenuBar(name)",
			"#define OC_UiPanel(s, f)",
			"INLINE MyStr_t OC_PathAppend(OC_Arena_t* arena, MyStr_t parent, MyStr_t relPath)",
			"INLINE MyStr_t OC_PathJoin(OC_Arena_t* arena, oc_str8_list elements)",
			"INLINE MyStr_t OC_PathSliceDirectory(MyStr_t path)",
			"INLINE MyStr_t OC_PathSliceFilename(MyStr_t path)",
			"INLINE MyStr_t OC_Str8FromBuffer(u64 len, char* buffer)",
			"INLINE MyStr_t OC_Str8ListCollate(OC_Arena_t* arena, oc_str8_list list, MyStr_t prefix, MyStr_t separator, MyStr_t postfix)",
			"INLINE MyStr_t OC_Str8ListJoin(OC_Arena_t* arena, oc_str8_list list)",
			"INLINE MyStr_t OC_Str8PushBuffer(OC_Arena_t* arena, u64 len, char* buffer)",
			"INLINE MyStr_t OC_Str8PushCopy(OC_Arena_t* arena, MyStr_t s)",
			"INLINE MyStr_t OC_Str8PushCstring(OC_Arena_t* arena, const char* str)",
			"INLINE MyStr_t OC_Str8PushSlice(OC_Arena_t* arena, MyStr_t s, u64 start, u64 end)",
			"INLINE MyStr_t OC_Str8Pushf(OC_Arena_t* arena, const char* format, ...)",
			"INLINE MyStr_t OC_Str8Pushfv(OC_Arena_t* arena, const char* format, va_list args)",
			"INLINE MyStr_t OC_Str8Slice(MyStr_t s, u64 start, u64 end)",
			"INLINE MyStr_t ToStr(oc_str8 ocString)",
			"INLINE OC_ArenaScope_t OC_ArenaScopeBegin(OC_Arena_t* arena)",
			"INLINE OC_ArenaScope_t OC_ScratchBegin() ",
			"INLINE OC_ArenaScope_t OC_ScratchBeginNext(OC_Arena_t* used)",
			"INLINE OC_CanvasContext_t OC_CanvasContextCreate()",
			"INLINE OC_CanvasContext_t OC_CanvasContextNil()",
			"INLINE OC_CanvasContext_t OC_CanvasContextSelect(OC_CanvasContext_t context)",
			"INLINE OC_CanvasRenderer_t OC_CanvasRendererCreate()",
			"INLINE OC_CanvasRenderer_t OC_CanvasRendererNil()",
			"INLINE OC_CapType_t OC_GetCap()",
			"INLINE OC_FileOpenWithDialogResult_t OC_FileOpenWithDialog(OC_Arena_t* arena, OC_FileAccess_t rights, OC_FileOpenFlags_t flags, OC_FileDialogDesc_t* desc)",
			"INLINE OC_FileStatus_t OC_FileGetStatus(OC_File_t file)",
			"INLINE OC_File_t OC_FileNil() ",
			"INLINE OC_File_t OC_FileOpen(MyStr_t path, OC_FileAccess_t rights, OC_FileOpenFlags_t flags)",
			"INLINE OC_File_t OC_FileOpenAt(OC_File_t dir, MyStr_t path, OC_FileAccess_t rights, OC_FileOpenFlags_t flags)",
			"INLINE OC_File_t OC_FileOpenWithRequest(MyStr_t path, OC_FileAccess_t rights, OC_FileOpenFlags_t flags)",
			"INLINE OC_FontMetrics_t OC_FontGetMetrics(OC_Font_t font, r32 emSize)",
			"INLINE OC_FontMetrics_t OC_FontGetMetricsUnscaled(OC_Font_t font)",
			"INLINE OC_Font_t OC_FontCreateFromFile(OC_File_t file, u32 rangeCount, OC_UnicodeRange_t* ranges)",
			"INLINE OC_Font_t OC_FontCreateFromMemory(MyStr_t mem, u32 rangeCount, OC_UnicodeRange_t* ranges)",
			"INLINE OC_Font_t OC_FontCreateFromPath(MyStr_t path, u32 rangeCount, OC_UnicodeRange_t* ranges)",
			"INLINE OC_Font_t OC_FontNil()",
			"INLINE OC_Font_t OC_GetFont()",
			"INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromFile(OC_RectAtlas_t* atlas, OC_Image_t backingImage, OC_File_t file, bool flip)",
			"INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromMemory(OC_RectAtlas_t* atlas, OC_Image_t backingImage, MyStr_t mem, bool flip)",
			"INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromPath(OC_RectAtlas_t* atlas, OC_Image_t backingImage, MyStr_t path, bool flip)",
			"INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromRgba_8(OC_RectAtlas_t* atlas, OC_Image_t backingImage, u32 width, u32 height, u8* pixels)",
			"INLINE OC_Image_t OC_GetImage()",
			"INLINE OC_Image_t OC_ImageCreate(OC_CanvasRenderer_t renderer, u32 width, u32 height)",
			"INLINE OC_Image_t OC_ImageCreateFromFile(OC_CanvasRenderer_t renderer, OC_File_t file, bool flip)",
			"INLINE OC_Image_t OC_ImageCreateFromMemory(OC_CanvasRenderer_t renderer, MyStr_t mem, bool flip)",
			"INLINE OC_Image_t OC_ImageCreateFromPath(OC_CanvasRenderer_t renderer, MyStr_t path, bool flip)",
			"INLINE OC_Image_t OC_ImageCreateFromRgba_8(OC_CanvasRenderer_t renderer, u32 width, u32 height, u8* pixels)",
			"INLINE OC_Image_t OC_ImageNil()",
			"INLINE OC_IoCmp_t OC_IoWaitSingleReq(OC_IoReq_t* req)",
			"INLINE OC_IoError_t OC_FileLastError(OC_File_t handle)",
			"INLINE OC_JointType_t OC_GetJoint()",
			"INLINE OC_ListElement_t* OC_ListBegin(OC_List_t* list)",
			"INLINE OC_ListElement_t* OC_ListEnd(OC_List_t* list)",
			"INLINE OC_ListElement_t* OC_ListLast(OC_List_t* list)",
			"INLINE OC_ListElement_t* OC_ListPop(OC_List_t* list)",
			"INLINE OC_ListElement_t* OC_ListPopBack(OC_List_t* list)",
			"INLINE OC_RectAtlas_t* OC_RectAtlasCreate(OC_Arena_t* arena, i32 width, i32 height)",
			"INLINE OC_Surface_t OC_CanvasSurfaceCreate(OC_CanvasRenderer_t renderer)",
			"INLINE OC_Surface_t OC_GlesSurfaceCreate()",
			"INLINE OC_Surface_t OC_SurfaceNil()",
			"INLINE OC_TextMetrics_t OC_FontTextMetrics(OC_Font_t font, r32 fontSize, MyStr_t text)",
			"INLINE OC_TextMetrics_t OC_FontTextMetricsUtr32(OC_Font_t font, r32 fontSize, oc_str32 codepoints)",
			"INLINE OC_UiBox_t* OC_UiScrollbar(const char* name, r32 thumbRatio, r32* scrollValue)",
			"INLINE OC_UiBox_t* OC_UiSlider(const char* name, r32* value)",
			"INLINE OC_UiContext_t* OC_UiGetContext() ",
			"INLINE OC_UiPattern_t OC_UiPatternAll() ",
			"INLINE OC_UiPattern_t OC_UiPatternOwner() ",
			"INLINE OC_UiRadioGroupInfo_t OC_UiRadioGroup(const char* name, OC_UiRadioGroupInfo_t* info)",
			"INLINE OC_UiSelectPopupInfo_t OC_UiSelectPopup(const char* name, OC_UiSelectPopupInfo_t* info)",
			"INLINE OC_UiSig_t OC_UiButton(const char* label)",
			"INLINE OC_UiSig_t OC_UiCheckbox(const char* name, bool* checked)",
			"INLINE OC_UiSig_t OC_UiLabel(const char* label)",
			"INLINE OC_UiSig_t OC_UiLabelStr8(MyStr_t label)",
			"INLINE OC_UiSig_t OC_UiMenuButton(const char* label)",
			"INLINE OC_UiTextBoxResult_t OC_UiTextBox(const char* name, OC_Arena_t* arena, MyStr_t text)",
			"INLINE bool OC_CanvasContextIsNil(OC_CanvasContext_t context)",
			"INLINE bool OC_CanvasRendererIsNil(OC_CanvasRenderer_t renderer)",
			"INLINE bool OC_FileIsNil(OC_File_t handle)",
			"INLINE bool OC_FontIsNil(OC_Font_t font)",
			"INLINE bool OC_GetTextFlip()",
			"INLINE bool OC_ImageIsNil(OC_Image_t a)",
			"INLINE bool OC_ListEmpty(OC_List_t* list)",
			"INLINE bool OC_PathIsAbsolute(MyStr_t path)",
			"INLINE bool OC_SurfaceGetHidden(OC_Surface_t surface)",
			"INLINE bool OC_SurfaceIsNil(OC_Surface_t surface)",
			"INLINE char* OC_Str8ToCstring(OC_Arena_t* arena, MyStr_t string)",
			"INLINE colf NewColorf(r32 r, r32 g, r32 b, r32 a)",
			"INLINE colf NewColorfBytes(u8 r, u8 g, u8 b, u8 a)",
			"INLINE colf NewColorfHex(u32 packedColorBgra)",
			"INLINE colf ToColorf(oc_color ocColor)",
			"INLINE i64 OC_FilePos(OC_File_t file)",
			"INLINE i64 OC_FileSeek(OC_File_t file, i64 offset, OC_FileWhence_t whence)",
			"INLINE int OC_Str8Cmp(MyStr_t s1, MyStr_t s2)",
			"INLINE mat23 NewMat23(r32 r0c0, r32 r0c1, r32 r0c2, r32 r1c0, r32 r1c1, r32 r1c2)",
			"INLINE mat23 OC_MatrixTop()",
			"INLINE mat23 ToMat23(oc_mat2x3 ocMatrix)",
			"INLINE oc_color OC_ColorConvert(oc_color color, OC_ColorSpace_t colorSpace)",
			"INLINE oc_color OC_ColorRgba(r32 r, r32 g, r32 b, r32 a)",
			"INLINE oc_color OC_ColorSrgba(r32 r, r32 g, r32 b, r32 a)",
			"INLINE oc_color OC_GetColor()",
			"INLINE oc_str32 OC_FontGetGlyphIndices(OC_Font_t font, oc_str32 codePoints, oc_str32 backing)",
			"INLINE oc_str32 OC_FontPushGlyphIndices(OC_Arena_t* arena, OC_Font_t font, oc_str32 codePoints)",
			"INLINE oc_str8_list OC_PathSplit(OC_Arena_t* arena, MyStr_t path)",
			"INLINE oc_str8_list OC_Str8Split(OC_Arena_t* arena, MyStr_t str, oc_str8_list separators)",
			"INLINE r32 OC_FontGetScaleForEmPixels(OC_Font_t font, r32 emSize)",
			"INLINE r32 OC_GetFontSize()",
			"INLINE r32 OC_GetMaxJointExcursion()",
			"INLINE r32 OC_GetTolerance()",
			"INLINE r32 OC_GetWidth()",
			"INLINE rec NewRec(r32 x, r32 y, r32 width, r32 height)",
			"INLINE rec OC_ClipTop()",
			"INLINE rec OC_GetImageSourceRegion()",
			"INLINE rec OC_GlyphOutlines(oc_str32 glyphIndices)",
			"INLINE rec OC_RectAtlasAlloc(OC_RectAtlas_t* atlas, i32 width, i32 height)",
			"INLINE rec RecScale(rec rectangle, r32 scalar)",
			"INLINE rec RecShift(rec rectangle, v2 amount)",
			"INLINE rec ToRec(oc_rect ocRectangle)",
			"INLINE u32 OC_FontGetGlyphIndex(OC_Font_t font, oc_utf32 codePoint)",
			"INLINE u64 OC_FileRead(OC_File_t file, u64 size, char* buffer)",
			"INLINE u64 OC_FileSize(OC_File_t file)",
			"INLINE u64 OC_FileWrite(OC_File_t file, u64 size, char* buffer)",
			"INLINE v2 NewVec2(r32 x, r32 y)",
			"INLINE v2 OC_GetPosition()",
			"INLINE v2 OC_ImageSize(OC_Image_t image)",
			"INLINE v2 OC_SurfaceContentsScaling(OC_Surface_t surface)",
			"INLINE v2 OC_SurfaceGetSize(OC_Surface_t surface)",
			"INLINE v2 ToVec2(oc_vec2 ocVector)",
			"INLINE v2 Vec2Add(v2 left, v2 right)",
			"INLINE v2 Vec2Scale(v2 vector, r32 scalar)",
			"INLINE v2 Vec2Shrink(v2 vector, r32 divisor)",
			"INLINE v2 Vec2Subtract(v2 left, v2 right)",
			"INLINE v2i NewVec2i(i32 x, i32 y)",
			"INLINE v2i ToVec2i(oc_vec2i ocVector)",
			"INLINE v2i Vec2iAdd(v2i left, v2i right)",
			"INLINE v2i Vec2iScale(v2i vector, i32 scalar)",
			"INLINE v2i Vec2iShrink(v2i vector, i32 divisor)",
			"INLINE v2i Vec2iSubtract(v2i left, v2i right)",
			"INLINE v3 NewVec3(r32 x, r32 y, r32 z)",
			"INLINE v3 ToVec3(oc_vec3 ocVector)",
			"INLINE v3 Vec3Add(v3 left, v3 right)",
			"INLINE v3 Vec3Scale(v3 vector, r32 scalar)",
			"INLINE v3 Vec3Shrink(v3 vector, r32 divisor)",
			"INLINE v3 Vec3Subtract(v3 left, v3 right)",
			"INLINE v4 NewVec4(r32 x, r32 y, r32 z, r32 w)",
			"INLINE v4 ToVec4(oc_vec4 ocVector)",
			"INLINE v4 Vec4Add(v4 left, v4 right)",
			"INLINE v4 Vec4Scale(v4 vector, r32 scalar)",
			"INLINE v4 Vec4Shrink(v4 vector, r32 divisor)",
			"INLINE v4 Vec4Subtract(v4 left, v4 right)",
			"INLINE void OC_Arc(r32 x, r32 y, r32 r, r32 arcAngle, r32 startAngle)",
			"INLINE void OC_ArenaCleanup(OC_Arena_t* arena)",
			"INLINE void OC_ArenaClear(OC_Arena_t* arena)",
			"INLINE void OC_ArenaInit(OC_Arena_t* arena)",
			"INLINE void OC_ArenaInitWithOptions(OC_Arena_t* arena, OC_ArenaOptions_t* options)",
			"INLINE void OC_ArenaScopeEnd(OC_ArenaScope_t scope)",
			"INLINE void OC_CanvasContextDestroy(OC_CanvasContext_t context)",
			"INLINE void OC_CanvasContextSetMsaaSampleCount(OC_CanvasContext_t context, u32 sampleCount)",
			"INLINE void OC_CanvasPresent(OC_CanvasRenderer_t renderer, OC_Surface_t surface)",
			"INLINE void OC_CanvasRender(OC_CanvasRenderer_t renderer, OC_CanvasContext_t context, OC_Surface_t surface)",
			"INLINE void OC_CanvasRendererDestroy(OC_CanvasRenderer_t renderer)",
			"INLINE void OC_CanvasSurfaceSwapInterval(OC_Surface_t surface, int swap)",
			"INLINE void OC_CircleFill(r32 x, r32 y, r32 r)",
			"INLINE void OC_CircleStroke(r32 x, r32 y, r32 r)",
			"INLINE void OC_Clear()",
			"INLINE void OC_ClipPop()",
			"INLINE void OC_ClipPush(r32 x, r32 y, r32 w, r32 h)",
			"INLINE void OC_ClosePath()",
			"INLINE void OC_CodepointsOutlines(oc_str32 string)",
			"INLINE void OC_CubicTo(r32 x1, r32 y1, r32 x2, r32 y2, r32 x3, r32 y3)",
			"INLINE void OC_EllipseFill(r32 x, r32 y, r32 rx, r32 ry)",
			"INLINE void OC_EllipseStroke(r32 x, r32 y, r32 rx, r32 ry)",
			"INLINE void OC_FileClose(OC_File_t file)",
			"INLINE void OC_Fill()",
			"INLINE void OC_FontDestroy(OC_Font_t font)",
			"INLINE void OC_GlesSurfaceMakeCurrent(OC_Surface_t surface)",
			"INLINE void OC_GlesSurfaceSwapBuffers(OC_Surface_t surface)",
			"INLINE void OC_GlesSurfaceSwapInterval(OC_Surface_t surface, int interval)",
			"INLINE void OC_ImageAtlasRecycle(OC_RectAtlas_t* atlas, OC_ImageRegion_t imageRgn)",
			"INLINE void OC_ImageDestroy(OC_Image_t image)",
			"INLINE void OC_ImageDraw(OC_Image_t image, rec rect)",
			"INLINE void OC_ImageDrawRegion(OC_Image_t image, rec srcRegion, rec dstRegion)",
			"INLINE void OC_ImageUploadRegionRgba_8(OC_Image_t image, rec region, u8* pixels)",
			"INLINE void OC_LineTo(r32 x, r32 y)",
			"INLINE void OC_ListInit(OC_List_t* list)",
			"INLINE void OC_ListInsert(OC_List_t* list, OC_ListElement_t* afterElt, OC_ListElement_t* elt)",
			"INLINE void OC_ListInsertBefore(OC_List_t* list, OC_ListElement_t* beforeElt, OC_ListElement_t* elt)",
			"INLINE void OC_ListPush(OC_List_t* list, OC_ListElement_t* elt)",
			"INLINE void OC_ListPushBack(OC_List_t* list, OC_ListElement_t* elt)",
			"INLINE void OC_ListRemove(OC_List_t* list, OC_ListElement_t* elt)",
			"INLINE void OC_MatrixMultiplyPush(mat23 matrix)",
			"INLINE void OC_MatrixPop()",
			"INLINE void OC_MatrixPush(mat23 matrix)",
			"INLINE void OC_MoveTo(r32 x, r32 y)",
			"INLINE void OC_QuadraticTo(r32 x1, r32 y1, r32 x2, r32 y2)",
			"INLINE void OC_RectAtlasRecycle(OC_RectAtlas_t* atlas, rec rect)",
			"INLINE void OC_RectangleFill(r32 x, r32 y, r32 w, r32 h)",
			"INLINE void OC_RectangleStroke(r32 x, r32 y, r32 w, r32 h)",
			"INLINE void OC_RequestQuit()",
			"INLINE void OC_RoundedRectangleFill(r32 x, r32 y, r32 w, r32 h, r32 r)",
			"INLINE void OC_RoundedRectangleStroke(r32 x, r32 y, r32 w, r32 h, r32 r)",
			"INLINE void OC_SetCap(OC_CapType_t cap)",
			"INLINE void OC_SetColor(oc_color color)",
			"INLINE void OC_SetColorRgba(colf color)",
			"INLINE void OC_SetColorSrgba(colf color)",
			"INLINE void OC_SetFont(OC_Font_t font)",
			"INLINE void OC_SetFontSize(r32 size)",
			"INLINE void OC_SetGradient(OC_GradientBlendSpace_t blendSpace, oc_color bottomLeft, oc_color bottomRight, oc_color topRight, oc_color topLeft)",
			"INLINE void OC_SetImage(OC_Image_t image)",
			"INLINE void OC_SetImageSourceRegion(rec region)",
			"INLINE void OC_SetJoint(OC_JointType_t joint)",
			"INLINE void OC_SetMaxJointExcursion(r32 maxJointExcursion)",
			"INLINE void OC_SetTextFlip(bool flip)",
			"INLINE void OC_SetTolerance(r32 tolerance)",
			"INLINE void OC_SetWidth(r32 width)",
			"INLINE void OC_Str8ListPush(OC_Arena_t* arena, oc_str8_list* list, MyStr_t str)",
			"INLINE void OC_Str8ListPushf(OC_Arena_t* arena, oc_str8_list* list, const char* format, ...)",
			"INLINE void OC_Stroke()",
			"INLINE void OC_SurfaceBringToFront(OC_Surface_t surface)",
			"INLINE void OC_SurfaceDestroy(OC_Surface_t surface)",
			"INLINE void OC_SurfaceSendToBack(OC_Surface_t surface)",
			"INLINE void OC_SurfaceSetHidden(OC_Surface_t surface, bool hidden)",
			"INLINE void OC_TextFill(r32 x, r32 y, MyStr_t text)",
			"INLINE void OC_TextOutlines(MyStr_t string)",
			"INLINE void OC_UiBeginFrame(v2 size, OC_UiStyle_t* defaultStyle, OC_UiStyleMask_t mask)",
			"INLINE void OC_UiDraw() ",
			"INLINE void OC_UiEndFrame() ",
			"INLINE void OC_UiInit(OC_UiContext_t* context)",
			"INLINE void OC_UiMenuBarBegin(const char* name)",
			"INLINE void OC_UiMenuBarEnd() ",
			"INLINE void OC_UiMenuBegin(const char* label)",
			"INLINE void OC_UiMenuEnd() ",
			"INLINE void OC_UiPanelBegin(const char* name, OC_UiFlags_t flags)",
			"INLINE void OC_UiPanelEnd() ",
			"INLINE void OC_UiPatternPush(OC_Arena_t* arena, OC_UiPattern_t* pattern, OC_UiSelector_t selector)",
			"INLINE void OC_UiProcessEvent(OC_Event_t* event)",
			"INLINE void OC_UiSetContext(OC_UiContext_t* context)",
			"INLINE void OC_UiStyleMatchAfter(OC_UiPattern_t pattern, OC_UiStyle_t* style, OC_UiStyleMask_t mask)",
			"INLINE void OC_UiStyleMatchBefore(OC_UiPattern_t pattern, OC_UiStyle_t* style, OC_UiStyleMask_t mask)",
			"INLINE void OC_UiStyleNext(OC_UiStyle_t* style, OC_UiStyleMask_t mask)",
			"INLINE void OC_UiTooltip(const char* label)",
			"INLINE void OC_WindowSetSize(v2 size)",
			"INLINE void OC_WindowSetTitle(MyStr_t title)",
			"INLINE void* OC_ArenaPush(OC_Arena_t* arena, u64 size)",
			"void OC_OnFrameRefresh()",
			"void OC_OnInit()",
			"void OC_OnKeyDown(OC_ScanCode_t scan, OC_KeyCode_t key)",
			"void OC_OnKeyUp(OC_ScanCode_t scan, OC_KeyCode_t key)",
			"void OC_OnMouseDown(OC_MouseButton_t button)",
			"void OC_OnMouseEnter()",
			"void OC_OnMouseLeave()",
			"void OC_OnMouseMove(r32 x, r32 y, r32 deltaX, r32 deltaY)",
			"void OC_OnMouseUp(OC_MouseButton_t button)",
			"void OC_OnMouseWheel(r32 deltaX, r32 deltaY)",
			"void OC_OnRawEvent(OC_Event_t* event)",
			"void OC_OnResize(r32 width, r32 height)",
			"void OC_OnTerminate()",
		],
		"custom_globals":
		[
		],
		"custom_types":
		[
			"Matrix2x3_t",
			"Rectangle_t",
			"Vec2_t",
			"Vec2i_t",
			"Vec3_t",
			"Vec3i_t",
			"Vec4_t",
			"mat23",
			"rec",
			"v2",
			"v2i",
			"v3",
			"v3i",
			"v4",
		],
	},
}
